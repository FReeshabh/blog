<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://freeshabh.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://freeshabh.github.io/blog/" rel="alternate" type="text/html" /><updated>2020-12-02T15:45:30-06:00</updated><id>https://freeshabh.github.io/blog/feed.xml</id><title type="html">Rishabh Tewari (ऋषभ तिवारी )</title><subtitle>A fool trying to do new things</subtitle><entry><title type="html">My first machine learning hackathon. Finishing #2 on both challenges</title><link href="https://freeshabh.github.io/blog/notebook/hackathon/machine-learning/2020/11/23/First-ML-Hackathon-Experience-CodeML-Finishing-second.html" rel="alternate" type="text/html" title="My first machine learning hackathon. Finishing #2 on both challenges " /><published>2020-11-23T00:00:00-06:00</published><updated>2020-11-23T00:00:00-06:00</updated><id>https://freeshabh.github.io/blog/notebook/hackathon/machine-learning/2020/11/23/First-ML-Hackathon-Experience-CodeML-Finishing-second</id><content type="html" xml:base="https://freeshabh.github.io/blog/notebook/hackathon/machine-learning/2020/11/23/First-ML-Hackathon-Experience-CodeML-Finishing-second.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-11-23-First-ML-Hackathon-Experience-CodeML-Finishing-second.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Challenges-in-this-Hackathon&quot;&gt;Challenges in this Hackathon&lt;a class=&quot;anchor-link&quot; href=&quot;#Challenges-in-this-Hackathon&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This past weekend I participated in the CodeML hackathon, which was my first machine learning hackathon experience. Given this blog post, is about a machine learning hackathon, I feel that it's quite apt to write this blog in Jupyter Notebooks.&lt;/p&gt;
&lt;p&gt;There were 6 challenges hosted on Kaggle, and they were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Celestial Body Clustering&lt;/li&gt;
&lt;li&gt;Anomaly Detection&lt;/li&gt;
&lt;li&gt;Reddit comments classification&lt;/li&gt;
&lt;li&gt;Sentiment Analysis&lt;/li&gt;
&lt;li&gt;Image Classification&lt;/li&gt;
&lt;li&gt;Easy Imagenet Classification (Or as I later found out, it was not really Imagenet)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I tried my hand at Challenge 5, and Challenge 6. And this blog post documents my experience with these challenges.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;blockquote&gt;&lt;p&gt;You don't need your own GPU or expensive hardware! I run a used $100 Thinkpad that I got off eBay. Google Colab, Kaggle, and Paperspace (there's probably more I'm failing to list here) provide free or inexpensive GPU instances you can use for training your deep models&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Challenge-5---Image-classification-challenge&quot;&gt;Challenge 5 - Image classification challenge&lt;a class=&quot;anchor-link&quot; href=&quot;#Challenge-5---Image-classification-challenge&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;I found out that that this challenge was testing out the CIFAR-10 dataset, which I somehow didn't realize at the time. Nevertheless, I scored a 0.94550 on the private leaderboard with the categorization accuracy metric.&lt;/p&gt;
&lt;h2 id=&quot;Using-Transfer-learning&quot;&gt;Using Transfer learning&lt;a class=&quot;anchor-link&quot; href=&quot;#Using-Transfer-learning&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;People who have already been actively taking part in Kaggle competitions, or any other machine learning competitions should see this as a no brainer, however for newbies who often try to train their models from scratch in such compeitions might miss on something that can give them a &lt;strong&gt;huge jump in performance&lt;/strong&gt;(they are also particularly popular within Image recognition tasks).&lt;/p&gt;
&lt;h3 id=&quot;A-very-brief-guide-to-transfer-learning&quot;&gt;A &lt;em&gt;very&lt;/em&gt; brief guide to transfer learning&lt;a class=&quot;anchor-link&quot; href=&quot;#A-very-brief-guide-to-transfer-learning&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;I don't plan to teach you transfer learning in this blog however before I send you running off onto the many different resources to learn transfer learning, I'll explain it a bit.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This deep learning technique enables developers to harness a neural network used for one task and apply it to another domain&lt;/strong&gt; -Nvidia's blog&lt;/p&gt;
&lt;p&gt;That's basically it in a nutshell. Let's say we have a machine learning model trained to classify images within the domain of vehicles - cars, motorcycles, etc. With a bit of tweaking and &lt;em&gt;a little training&lt;/em&gt; of the last few layers (or just one) of the network, we can repurpose the model to fit our own task.&lt;/p&gt;
&lt;p&gt;We can view how these various pretrained models perform for certain tasks. A popular benchmark to see how these pretrained models would perform on the ImageNet dataset. Here's &lt;a href=&quot;https://dawn.cs.stanford.edu/benchmark/&quot;&gt;Stanford's DAWNBench&lt;/a&gt;. We can see a lot of these top models for image recognition are ResNets.&lt;/p&gt;
&lt;h4 id=&quot;ResNet-and-it's-magicks&quot;&gt;ResNet and it's &lt;em&gt;magicks&lt;/em&gt;&lt;a class=&quot;anchor-link&quot; href=&quot;#ResNet-and-it's-magicks&quot;&gt; &lt;/a&gt;&lt;/h4&gt;&lt;p&gt;ResNet is one of the most popular pre-trained models used for image recognition, and it comes in the sizes of 18 layers, 34 layers, 50 layers, and 101 layers (there's also a 152 model). The paper for &lt;a href=&quot;https://arxiv.org/abs/1512.03385&quot;&gt;Deep Residual Learning for Image Recognition
 can be found here.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I don't want to give the impression that transfer learning is only a valid technique for image recognition, in the past few years we have found it emerge it into other fields of machine learnning too. Here's a &lt;a href=&quot;https://youtu.be/t86G11tfVNw&quot;&gt;talk by Thomas Wolf on using transfer learning for NLP using Hugging Face&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can learn more about ResNet from &lt;a href=&quot;https://github.com/fastai/fastbook/blob/master/14_resnet.ipynb&quot;&gt;fastbook&lt;/a&gt;, &lt;a href=&quot;https://d2l.ai/chapter_convolutional-modern/resnet.html&quot;&gt;d2l.ai book&lt;/a&gt;, or the multiple other resources you can find on the internet.&lt;/p&gt;
&lt;p&gt;I used transfer learning with a Resnet 50 model for this image recognition task.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;blockquote&gt;&lt;p&gt;Learning rate finder is a great tool too. And so are discriminative learning rates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Challenge-6&quot;&gt;Challenge 6&lt;a class=&quot;anchor-link&quot; href=&quot;#Challenge-6&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;I used the same approach for this challenge as I did for Challenge 5, and while it initially gave me an edge over other competitors, I realize in hindsight my step 1 should probably have to try to realize what the dataset was. My score was around 68% categorization accuracy on the task, and 70-71% categorization accuracy with a late submission, while the winning submission had a categorization accuracy of 80%+.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;blockquote&gt;&lt;p&gt;Try half point precision for faster training:to_fp_16(), and to_native_fp_16()&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;So-what-happened?&quot;&gt;So what happened?&lt;a class=&quot;anchor-link&quot; href=&quot;#So-what-happened?&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;An &lt;strong&gt;&lt;em&gt;Adversarial Attack&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;What-is-an-Adversarial-attack?&quot;&gt;What is an Adversarial attack?&lt;a class=&quot;anchor-link&quot; href=&quot;#What-is-an-Adversarial-attack?&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;An adversarial attack is when the dataset is designed to intentionally fool the model. In my model, this wasn't a possibility I had considered.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Final-Thoughts-and-takeaways&quot;&gt;Final Thoughts and takeaways&lt;a class=&quot;anchor-link&quot; href=&quot;#Final-Thoughts-and-takeaways&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Despite not winning the challenges, but still being one of the top teams. I defintely learned a lot, and here are some of my takeaways from the hackathon.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Inspect the dataset&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Not considering an adversarial attack, or recognizing a popular dataset was a mistake on my end. So inspecting the data thouroughly is quite important.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Consider using transfer learning&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Transfer learning is usually a way to get state of the art results while giving results faster than training a model from scratch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Data Visualization and plot confusions&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;Check what the model usually messes up on, any data visualizations to aid your understanding of your model's results will be helpful - Confusion Matrix, most confused list, anything else.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Revise your model&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;After constructing a baseline model. Revise your model!&lt;/p&gt;
&lt;p&gt;Try different paramaters. KFold validation. Try a deeper model like ResNet101 (as a last resort).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://freeshabh.github.io/blog/images/codeml/codeML.jpeg" /><media:content medium="image" url="https://freeshabh.github.io/blog/images/codeml/codeML.jpeg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Virtual Reality Project using Aframe (Covid Human scale experience)</title><link href="https://freeshabh.github.io/blog/project/2020/10/03/PROJECT-Intro-to-virtual-reality-project.html" rel="alternate" type="text/html" title="Virtual Reality Project using Aframe (Covid Human scale experience)" /><published>2020-10-03T00:00:00-05:00</published><updated>2020-10-03T00:00:00-05:00</updated><id>https://freeshabh.github.io/blog/project/2020/10/03/PROJECT-Intro-to-virtual-reality-project</id><content type="html" xml:base="https://freeshabh.github.io/blog/project/2020/10/03/PROJECT-Intro-to-virtual-reality-project.html">&lt;h1 id=&quot;my-first-introduction-to-virtual-reality&quot;&gt;My first introduction to virtual reality&lt;/h1&gt;
&lt;p&gt;This project was my first experience with virtual reality development. This project is made to be run in a browser and can be viewed by clicking on this &lt;a href=&quot;https://freeshabh.github.io/virtual-reality-project-1/&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This project was made for my CS 4331-5331 class, and more information about this project can be found on the project’s README.md page &lt;a href=&quot;https://github.com/FReeshabh/virtual-reality-project-1#virtual-reality-project-1---rishabh-tewari&quot;&gt;here&lt;/a&gt;.
The README file documents all the models, animations, and code snippets used. The next project for this class will use the Unity Game Engine, which is a more topical tool than Aframe for virtual reality development.&lt;/p&gt;

&lt;p&gt;This project is licensed under the MIT license, so feel free to use it any way you want :)&lt;/p&gt;</content><author><name></name></author><summary type="html">My first introduction to virtual reality This project was my first experience with virtual reality development. This project is made to be run in a browser and can be viewed by clicking on this link.</summary></entry><entry><title type="html">Not just Git Workhsop - EWoCS</title><link href="https://freeshabh.github.io/blog/workshop/2020/10/03/WORKSHOP-Not-just-a-git-workshop.html" rel="alternate" type="text/html" title="Not just Git Workhsop - EWoCS" /><published>2020-10-03T00:00:00-05:00</published><updated>2020-10-03T00:00:00-05:00</updated><id>https://freeshabh.github.io/blog/workshop/2020/10/03/WORKSHOP-Not-just-a-git-workshop</id><content type="html" xml:base="https://freeshabh.github.io/blog/workshop/2020/10/03/WORKSHOP-Not-just-a-git-workshop.html">&lt;h1 id=&quot;not-just-git-workshop&quot;&gt;Not just git workshop&lt;/h1&gt;
&lt;p&gt;youtube link: https://youtu.be/76o9TxqnMRg&lt;/p&gt;</content><author><name></name></author><summary type="html">Not just git workshop youtube link: https://youtu.be/76o9TxqnMRg</summary></entry><entry><title type="html">Archived Posts</title><link href="https://freeshabh.github.io/blog/markdown/2020/09/09/The-archived-posts.html" rel="alternate" type="text/html" title="Archived Posts" /><published>2020-09-09T00:00:00-05:00</published><updated>2020-09-09T00:00:00-05:00</updated><id>https://freeshabh.github.io/blog/markdown/2020/09/09/The-archived-posts</id><content type="html" xml:base="https://freeshabh.github.io/blog/markdown/2020/09/09/The-archived-posts.html">&lt;h1 id=&quot;archived-posts-of-the-past&quot;&gt;Archived Posts of the past&lt;/h1&gt;
&lt;p&gt;These are not all of the old posts, however most of them are here (Sites might be somewhat broken):&lt;/p&gt;

&lt;h2 id=&quot;standup-comedy-experience-after-4-5-months&quot;&gt;Standup Comedy Experience After 4-5 Months&lt;/h2&gt;

&lt;p&gt;Link to it: &lt;a href=&quot;https://freeshabh.github.io/xblog/comedy/2020/02/13/Standup-Comedy-Experience-After-4-5-months.html&quot;&gt;right here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;panda3d-proposals&quot;&gt;Panda3D Proposals&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Link to the SoLoud proposal: &lt;a href=&quot;https://freeshabh.github.io/xblog/2020/03/30/Panda3D-SoLoud-Integration-Proposal.html&quot;&gt;right here&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Link to the Native Video proposal: &lt;a href=&quot;https://freeshabh.github.io/xblog/2020/03/30/Panda3D-native-video-2020-proposal.html&quot;&gt;right here&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;the-illusion-series&quot;&gt;The illusion series&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Link to Illusion and Reality of Bloatware: A meme saga: &lt;a href=&quot;https://freeshabh.github.io/xblog/linux/soft-community/2020/04/05/Illusion-And-reality-ofBloatware.html&quot;&gt;right here&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Link to Illusion of Choice Linux: &lt;a href=&quot;https://freeshabh.github.io/xblog/linux/soft-community/2020/04/05/Illusion_ofChoiceLinux.html&quot;&gt;right here&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;linear-regression&quot;&gt;Linear Regression&lt;/h2&gt;
&lt;p&gt;Link to the notebook: &lt;a href=&quot;https://freeshabh.github.io/xblog/machine-learning/2020/04/06/linear-regression-a-non-authoritative-guide.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;another-old-blog--here&quot;&gt;Another old blog =&amp;gt; &lt;a href=&quot;https://gist.github.com/FReeshabh/a43d3e3405fee1e5226f733a7e8932a6&quot;&gt;HERE&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Ciao?&lt;/p&gt;</content><author><name></name></author><summary type="html">Archived Posts of the past These are not all of the old posts, however most of them are here (Sites might be somewhat broken):</summary></entry></feed>